name: Sync Main Branch Changes to EdgeOne-Pages

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ 检出仓库
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_TOKEN }}

      # 2️⃣ 设置 Git 用户
      - name: Set up Git
        run: |
          git config user.name "shimoxijimu-actions"
          git config user.email "shimoxijimu@users.noreply.github.com"

      # 3️⃣ 同步 main 分支的所有变化到 EdgeOne-Pages
      - name: Sync all changes from main to EdgeOne-Pages
        run: |
          # 检查是否有 PERSONAL_TOKEN
          if [[ -z "${{ secrets.PERSONAL_TOKEN }}" ]]; then
            echo "Warning: PERSONAL_TOKEN not found. Please set PERSONAL_TOKEN in repository secrets to enable deployment."
            echo "Skipping deployment..."
            exit 0
          fi
          
          echo "Starting sync process..."
          BRANCH="EdgeOne-Pages"

          # 获取当前提交的变更文件列表
          echo "Getting changed files from this push..."
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          echo "Changed files:"
          echo "$CHANGED_FILES"

          # 检查远程分支是否存在
          if git ls-remote --exit-code --heads origin $BRANCH >/dev/null 2>&1; then
            echo "Remote branch $BRANCH exists, fetching..."
            git fetch origin $BRANCH
            git checkout -B $BRANCH origin/$BRANCH
          else
            echo "Remote branch $BRANCH does not exist, creating new branch..."
            git checkout -b $BRANCH
          fi

          echo "Current branch: $(git branch --show-current)"

          # 切换回 main 分支获取最新文件
          git checkout main

          # 同步变更的文件
          CHANGES_MADE=false
          
          while IFS= read -r file; do
            if [[ -n "$file" && -f "$file" ]]; then
              echo "Processing changed file: $file"
              
              # 切换到目标分支
              git checkout $BRANCH
              
              # 创建目标目录（如果需要）
              target_dir=$(dirname "$file")
              if [[ "$target_dir" != "." ]]; then
                mkdir -p "$target_dir"
              fi
              
              # 从 main 分支复制文件
              git checkout main -- "$file"
              
              # 检查文件是否真的有变化
              if git diff --quiet HEAD "$file" 2>/dev/null; then
                echo "$file unchanged."
              else
                echo "Adding $file to staging..."
                git add "$file"
                CHANGES_MADE=true
              fi
            fi
          done <<< "$CHANGED_FILES"

          # 切换回目标分支进行提交
          git checkout $BRANCH

          # 额外步骤：将 deploy 目录下的文件复制到根目录
          echo "Copying files from deploy/ directory to root..."
          DEPLOY_DIR="deploy"
          
          if [[ -d "$DEPLOY_DIR" ]]; then
            for file in "$DEPLOY_DIR"/*; do
              if [[ -f "$file" ]]; then
                filename=$(basename "$file")
                echo "Processing deploy file: $filename"
                
                # 比较文件是否有变化
                if ! cmp -s "$file" "$filename" 2>/dev/null; then
                  echo "Copying $filename from $file to root directory..."
                  cp "$file" "$filename"
                  git add "$filename"
                  CHANGES_MADE=true
                else
                  echo "Deploy file $filename unchanged."
                fi
              fi
            done
          else
            echo "Deploy directory not found, skipping deploy files copy."
          fi

          # 提交并推送变化
          if [[ "$CHANGES_MADE" == true ]]; then
            echo "Committing changes..."
            git commit -m "Sync changes from main branch and deploy files ($(echo ${{ github.sha }} | cut -c1-7))"
            
            # 尝试推送，如果失败则强制推送
            echo "Pushing to remote..."
            if ! git push https://x-access-token:${{ secrets.PERSONAL_TOKEN }}@github.com/${{ github.repository }} $BRANCH; then
              echo "Normal push failed, trying force push..."
              git push --force https://x-access-token:${{ secrets.PERSONAL_TOKEN }}@github.com/${{ github.repository }} $BRANCH
            fi
            
            echo "Changes committed and pushed to $BRANCH branch."
          else
            echo "No changes to commit."
          fi
