name: Deploy GitModules to EdgeOne-Pages

on:
  push:
    branches:
      - main
    paths:
      - 'deploy/.gitmodules'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ 检出仓库
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2️⃣ 设置 Git 用户
      - name: Set up Git
        run: |
          git config user.name "shimoxijimu-actions"
          git config user.email "shimoxijimu@users.noreply.github.com"

      # 3️⃣ 部署 .gitmodules 到 EdgeOne-Pages
      - name: Deploy .gitmodules to EdgeOne-Pages
        run: |
          # 检查是否有 PERSONAL_TOKEN
          if [[ -z "${{ secrets.PERSONAL_TOKEN }}" ]]; then
            echo "Warning: PERSONAL_TOKEN not found. Please set PERSONAL_TOKEN in repository secrets to enable deployment."
            echo "Skipping deployment..."
            exit 0
          fi
          
          echo "Starting deployment process..."
          BRANCH="EdgeOne-Pages"

          # 检查源文件是否存在
          SRC="deploy/.gitmodules"
          if [[ ! -f "$SRC" ]]; then
            echo "Error: Source file $SRC not found."
            exit 1
          fi
          
          echo "Source file $SRC found, proceeding..."

          # 检查远程分支是否存在
          if git ls-remote --exit-code --heads origin $BRANCH >/dev/null 2>&1; then
            echo "Remote branch $BRANCH exists, fetching..."
            git fetch origin $BRANCH
            git checkout -B $BRANCH origin/$BRANCH
          else
            echo "Remote branch $BRANCH does not exist, creating new branch..."
            git checkout -b $BRANCH
          fi

          # 显示当前分支
          echo "Current branch: $(git branch --show-current)"

          # 同步 .gitmodules 文件
          DEST=".gitmodules"
          
          echo "Comparing files..."
          if ! cmp -s "$SRC" "$DEST" 2>/dev/null; then
            echo "Files are different, updating $DEST from $SRC..."
            cp "$SRC" "$DEST"
            git add "$DEST"
            
            # 检查是否有变化需要提交
            if git diff --cached --quiet; then
              echo "No changes to commit after adding file."
            else
              echo "Committing changes..."
              git commit -m "Update .gitmodules from main branch"
              
              # 尝试推送，如果失败则强制推送
              echo "Pushing to remote..."
              if ! git push https://x-access-token:${{ secrets.PERSONAL_TOKEN }}@github.com/${{ github.repository }} $BRANCH; then
                echo "Normal push failed, trying force push..."
                git push --force https://x-access-token:${{ secrets.PERSONAL_TOKEN }}@github.com/${{ github.repository }} $BRANCH
              fi
              
              echo "Changes committed and pushed to $BRANCH branch."
            fi
          else
            echo "Files are identical, no update needed."
          fi
