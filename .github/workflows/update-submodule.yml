name: Sync Main to EdgeOne-Pages

on:
  push:
    branches: [main]

jobs:
  sync-to-edgeone:
    runs-on: ubuntu-latest
    
    steps:
      # 1️⃣ 检出 main 分支
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_TOKEN }}

      # 2️⃣ 获取最新提交信息
      - name: Get latest commit info
        id: commit_info
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")
          COMMIT_ID=$(git log -1 --pretty=format:"%h")
          echo "commit_message=$COMMIT_MESSAGE" >> $GITHUB_OUTPUT
          echo "commit_id=$COMMIT_ID" >> $GITHUB_OUTPUT
          echo "Latest commit: $COMMIT_MESSAGE ($COMMIT_ID)"

      # 3️⃣ 设置 Git 用户
      - name: Set up Git
        run: |
          git config user.name "shimoxijimu-actions"
          git config user.email "shimoxijimu@users.noreply.github.com"

      # 4️⃣ 同步到 EdgeOne-Pages 分支
      - name: Sync to EdgeOne-Pages branch
        run: |
          # 检查是否有 PERSONAL_TOKEN
          if [[ -z "${{ secrets.PERSONAL_TOKEN }}" ]]; then
            echo "Warning: PERSONAL_TOKEN not found. Please set PERSONAL_TOKEN in repository secrets to enable deployment."
            echo "Skipping deployment..."
            exit 0
          fi
          
          echo "Syncing main branch to EdgeOne-Pages..."
          
          # 检查 EdgeOne-Pages 分支是否存在
          if git ls-remote --exit-code --heads origin EdgeOne-Pages >/dev/null 2>&1; then
            echo "EdgeOne-Pages branch exists, checking out..."
            git fetch origin EdgeOne-Pages
            git checkout EdgeOne-Pages
          else
            echo "EdgeOne-Pages branch does not exist, creating..."
            git checkout -b EdgeOne-Pages
          fi
          
          # 强制合并 main 分支的内容
          echo "Force merging main branch content..."
          
          # 使用 -X theirs 策略强制接受 main 分支的更改
          if ! git merge origin/main -X theirs --no-edit; then
            echo "Standard merge failed, using reset strategy..."
            
            # 如果合并仍然失败，直接重置到 main 分支状态
            git reset --hard origin/main
            echo "Force reset to main branch completed"
          else
            echo "Force merge completed successfully"
          fi
          
          # 5️⃣ 复制 deploy 文件夹内容到根目录
          echo "Copying deploy folder contents to root directory..."
          if [[ -d "deploy" ]]; then
            echo "Deploy folder found, copying contents..."
            
            # 显示 deploy 文件夹内容
            echo "Deploy folder contents:"
            ls -la deploy/
            
            # 复制所有文件和文件夹，覆盖现有文件
            cp -rf deploy/* ./
            cp -rf deploy/.* ./ 2>/dev/null || true  # 复制隐藏文件，忽略错误
            
            echo "Files copied successfully"
            echo "Root directory contents after copy:"
            ls -la
            
            # 添加所有更改
            git add .
            
            # 检查是否有变更需要提交
            if git diff --cached --quiet; then
              echo "No changes to commit after copying deploy files."
            else
              echo "Changes detected, committing..."
              git commit -m "${{ steps.commit_info.outputs.commit_message }} (${{ steps.commit_info.outputs.commit_id }})"
              
              # 推送更新
              echo "Pushing changes to EdgeOne-Pages..."
              git push https://x-access-token:${{ secrets.PERSONAL_TOKEN }}@github.com/${{ github.repository }} EdgeOne-Pages
              echo "✅ Successfully synced main to EdgeOne-Pages and copied deploy files."
            fi
          else
            echo "Deploy folder not found, only syncing main branch content..."
            
            # 检查是否有变更需要提交
            if git diff --cached --quiet && git diff --quiet; then
              echo "No changes to commit."
            else
              git add .
              git commit -m "${{ steps.commit_info.outputs.commit_message }} (${{ steps.commit_info.outputs.commit_id }})"
              git push https://x-access-token:${{ secrets.PERSONAL_TOKEN }}@github.com/${{ github.repository }} EdgeOne-Pages
              echo "✅ Successfully synced main to EdgeOne-Pages."
            fi
          fi